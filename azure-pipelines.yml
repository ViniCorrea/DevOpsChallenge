trigger:
- '*'

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: 'src/**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: '**/*.csproj'
    arguments: '--no-restore --configuration $(BuildConfiguration)'
    workingDirectory: src

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: |
     **/*[Tt]ests.*/*.csproj
    arguments: '--configuration $(BuildConfiguration)'
    workingDirectory: src

- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: True

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()

- task: Docker@2
  displayName: 'Docker Push'
  inputs:
    containerRegistry: 'NiboDevOpsChallengeRegistry'
    repository: nibo
    command: 'buildAndPush'
    Dockerfile: 'Dockerfile'
    tags: $(Build.BuildNumber)
    addPipelineData: false